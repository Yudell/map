const { createCanvas } = require('canvas');
const fs = require('fs');
const { createNoise2D } = require('simplex-noise');

// Constants
const TERRAIN_TYPES = {
  DEEP_WATER: 0,
  SHALLOW_WATER: 1,
  SAND: 2,
  GRASS: 3,
  FOREST: 4,
  MOUNTAIN: 5,
};

const TERRAIN_COLORS = {
  [TERRAIN_TYPES.DEEP_WATER]: '#000080',
  [TERRAIN_TYPES.SHALLOW_WATER]: '#0000FF',
  [TERRAIN_TYPES.SAND]: '#FFFF00',
  [TERRAIN_TYPES.GRASS]: '#008000',
  [TERRAIN_TYPES.FOREST]: '#228B22',
  [TERRAIN_TYPES.MOUNTAIN]: '#8B0000',
};

function generateMap(width, height) {
  const noise2D = createNoise2D();
  const map = [];

  for (let y = 0; y < height; y++) {
    map[y] = [];
    for (let x = 0; x < width; x++) {
      const noiseValue = noise2D(x / 100, y / 100);
      let terrainType;
      if (noiseValue < -0.5) {
        terrainType = TERRAIN_TYPES.DEEP_WATER;
      } else if (noiseValue < -0.2) {
        terrainType = TERRAIN_TYPES.SHALLOW_WATER;
      } else if (noiseValue < 0) {
        terrainType = TERRAIN_TYPES.SAND;
      } else if (noiseValue < 0.5) {
        terrainType = TERRAIN_TYPES.GRASS;
      } else if (noiseValue < 0.8) {
        terrainType = TERRAIN_TYPES.FOREST;
      } else {
        terrainType = TERRAIN_TYPES.MOUNTAIN;
      }
      map[y][x] = terrainType;
    }
  }

  return map;
}

function drawMap(map, cellSize) {
  const canvas = createCanvas(map[0].length * cellSize, map.length * cellSize);
  const ctx = canvas.getContext('2d');

  for (let y = 0; y < map.length; y++) {
    for (let x = 0; x < map[y].length; x++) {
      const terrainType = map[y][x];
      ctx.fillStyle = TERRAIN_COLORS[terrainType];
      ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);
    }
  }

  return canvas;
}

function saveMapAsPNG(canvas, filename) {
  const buffer = canvas.toBuffer('image/png');
  fs.writeFileSync(filename, buffer);
}

// Configuration
const mapWidth = 1000;
const mapHeight = 1000;
const cellSize = 10;

// Generate and save the map
const map = generateMap(mapWidth, mapHeight);
const canvas = drawMap(map, cellSize);
saveMapAsPNG(canvas, 'map.png');